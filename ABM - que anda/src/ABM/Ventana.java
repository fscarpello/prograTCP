/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ABM;

import Alumno.Alumno;
import DAO.AlumnoDAOTxt;
import DAO.DAO;
import MiCalendar.MiCalendar;
import Persona.PersonaInvalidaException;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Nico
 */
public class Ventana extends javax.swing.JFrame {

    /**
     * Creates new form Ventana
     */
    public Ventana() {
        initComponents();
        modeloTabla = new MiModel();
        tablajTable.setModel(modeloTabla);
        setBotonesTextField(false);
        JOptionPane.showMessageDialog(this, "Facu sos una desgracia.","Puto",JOptionPane.PLAIN_MESSAGE);
        JOptionPane.showMessageDialog(this, "Puto.","Puto",JOptionPane.PLAIN_MESSAGE);
        JOptionPane.showMessageDialog(this, "Forroo.","Puto",JOptionPane.PLAIN_MESSAGE);
        JOptionPane.showMessageDialog(this, "Andate con tu otro grupo.","Puto",JOptionPane.PLAIN_MESSAGE);
        for(int i=0; i<10 ;i++)
            JOptionPane.showMessageDialog(this, "Puto.","Facu",JOptionPane.PLAIN_MESSAGE);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        selectionjButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablajTable = new javax.swing.JTable();
        nuevojButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        dnijTextField = new javax.swing.JTextField();
        buscarjButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        apynjTextField = new javax.swing.JTextField();
        guardarjButton = new javax.swing.JButton();
        cancelarjButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        mascjRadioButton = new javax.swing.JRadioButton();
        femjRadioButton = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        nacjDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel5 = new javax.swing.JLabel();
        ingresojDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel6 = new javax.swing.JLabel();
        cantMatAprobjSpinner = new javax.swing.JSpinner();
        jLabel7 = new javax.swing.JLabel();
        estadojComboBox = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        promediojTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        carrerajComboBox = new javax.swing.JComboBox<>();
        darDeBajajButton = new javax.swing.JButton();
        selectionjTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectionjButton.setText("...");
        selectionjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectionjButtonActionPerformed(evt);
            }
        });

        tablajTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tablajTable);

        nuevojButton.setText("Nuevo");
        nuevojButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevojButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("DNI");

        dnijTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dnijTextFieldKeyTyped(evt);
            }
        });

        buscarjButton.setText("Buscar");
        buscarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarjButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Apellido y Nombres");

        apynjTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                apynjTextFieldKeyTyped(evt);
            }
        });

        guardarjButton.setText("Guardar");
        guardarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarjButtonActionPerformed(evt);
            }
        });

        cancelarjButton.setText("Cancelar");
        cancelarjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarjButtonActionPerformed(evt);
            }
        });

        jButton3.setText("Eliminar");
        jButton3.setEnabled(false);

        buttonGroup1.add(mascjRadioButton);
        mascjRadioButton.setSelected(true);
        mascjRadioButton.setText("Masculino");

        buttonGroup1.add(femjRadioButton);
        femjRadioButton.setText("Femenino");

        jLabel3.setText("Sexo");

        jLabel4.setText("Fecha de Nacimiento");

        nacjDateChooser.setMaxSelectableDate(new java.util.Date(253370779296000L));
        nacjDateChooser.setMinSelectableDate(new java.util.Date(-2208969696000L));

        jLabel5.setText("Fecha de Ingreso");

        ingresojDateChooser.setMinSelectableDate(new java.util.Date(-2208969696000L));

        jLabel6.setText("Cantidad de Materias Aprobadas");

        cantMatAprobjSpinner.setModel(new javax.swing.SpinnerNumberModel(0, 0, 100, 1));

        jLabel7.setText("Estado");

        estadojComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A", "B" }));
        estadojComboBox.setEnabled(false);

        jLabel8.setText("Promedio");

        promediojTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                promediojTextFieldKeyTyped(evt);
            }
        });

        jLabel9.setText("Carrera");

        carrerajComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SLD", "EDF", "ING", "ARQ", "ABG", "CMS" }));

        darDeBajajButton.setText("Dar De Baja");
        darDeBajajButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                darDeBajajButtonActionPerformed(evt);
            }
        });

        selectionjTextField.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(nacjDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(18, 18, 18)
                                        .addComponent(dnijTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(buscarjButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(mascjRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(femjRadioButton)
                                        .addGap(30, 30, 30)
                                        .addComponent(jLabel9)
                                        .addGap(18, 18, 18)
                                        .addComponent(carrerajComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(10, 10, 10)
                                        .addComponent(apynjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(30, 30, 30)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel7)
                                        .addGap(38, 38, 38)
                                        .addComponent(estadojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(39, 39, 39)
                                        .addComponent(darDeBajajButton))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(27, 27, 27)
                                        .addComponent(promediojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel5)
                                            .addGap(18, 18, 18)
                                            .addComponent(ingresojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel6)
                                            .addGap(18, 18, 18)
                                            .addComponent(cantMatAprobjSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addComponent(selectionjTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectionjButton)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cancelarjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(guardarjButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(nuevojButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectionjButton)
                    .addComponent(selectionjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nuevojButton)
                            .addComponent(jLabel1)
                            .addComponent(dnijTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buscarjButton)
                            .addComponent(jButton3))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guardarjButton)
                            .addComponent(jLabel2)
                            .addComponent(apynjTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(cantMatAprobjSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cancelarjButton)
                            .addComponent(jLabel8)
                            .addComponent(promediojTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(mascjRadioButton)
                            .addComponent(femjRadioButton)
                            .addComponent(jLabel9)
                            .addComponent(carrerajComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(nacjDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7)
                                .addComponent(estadojComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(darDeBajajButton)))
                        .addGap(42, 42, 42)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(ingresojDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectionjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectionjButtonActionPerformed
        try {
            dao = new AlumnoDAOTxt(new File("Alumnos.txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        List <Alumno> alumnosList = new ArrayList<>();
        try {
            alumnosList = dao.listarTodos();
        } catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        System.out.println(alumnosList.size());
        for(int i=0 ; i < alumnosList.size() ; i++) {
            System.out.println(alumnosList.get(i));
        
        }
        try {
            modeloTabla.setAlumnos(alumnosList);
        } catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        
        selectionjTextField.setText(System.getProperty("user.dir")+"\\"+"Alumnos.txt");
        nuevojButton.setEnabled(true);
        dnijTextField.setEnabled(true);
        buscarjButton.setEnabled(true);
    }//GEN-LAST:event_selectionjButtonActionPerformed

    private void nuevojButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevojButtonActionPerformed
        
        if(cambiosGuardados==false){
            int opt = JOptionPane.showConfirmDialog(this,"¿Desea guardar los cambios?","Guardar cambios",JOptionPane.YES_NO_CANCEL_OPTION);
            if(opt==JOptionPane.YES_OPTION){
                if(ingresojDateChooser.getDate()==null || (Integer)cantMatAprobjSpinner.getValue()<0 || promediojTextField.getText().equals("") || dnijTextField.getText().equals("") || apynjTextField.getText().equals("") || nacjDateChooser.getDate()==null) {
                    JOptionPane.showMessageDialog(this, "Hay campos que estan incompletos.", "Error", JOptionPane.PLAIN_MESSAGE);
                    return;
                }
                else
                    guardarjButtonActionPerformed(evt);
            }
                
            if(opt==JOptionPane.CANCEL_OPTION)
                return;
        }
        
        setBotonesTextField(true);        
        limpiarBotonesTextField();
        darDeBajajButton.setEnabled(false);
        cambiosGuardados = true;        
        //Alumno(MiCalendar fechaIngreso, Integer cantMatAprob, Double promedio, String carrera, boolean estado, Integer dni, String apyn, MiCalendar fechaNac, char sexo)
                
    }//GEN-LAST:event_nuevojButtonActionPerformed
    
    private void limpiarBotonesTextField(){
        dnijTextField.setText("");
        apynjTextField.setText("");
        nacjDateChooser.setDate(null);
        mascjRadioButton.setSelected(true);
        femjRadioButton.setSelected(false);
        ingresojDateChooser.setDate(null);
        cantMatAprobjSpinner.setValue(0);
        promediojTextField.setText("");
        carrerajComboBox.setSelectedIndex(0);
        estadojComboBox.setSelectedIndex(0);
        
        buscarjButton.setEnabled(true);
        guardarjButton.setEnabled(true);
        darDeBajajButton.setEnabled(true);
        cancelarjButton.setEnabled(true);
}
    
    private Alumno llenarAlumno(Alumno alu) throws PersonaInvalidaException{
        
        String carreraElegida = null;       
        
        try {
            alu.setDni(Integer.valueOf(dnijTextField.getText()));
        } catch (PersonaInvalidaException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            alu.setApyn(apynjTextField.getText().trim());
        } catch (PersonaInvalidaException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            alu.setFechaNac(new MiCalendar(nacjDateChooser.getCalendar().get(Calendar.DAY_OF_MONTH),nacjDateChooser.getCalendar().get(Calendar.MONTH)+1,nacjDateChooser.getCalendar().get(Calendar.YEAR)));
        } catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(mascjRadioButton.isSelected()) {
            alu.setSexo('M');
        }
        else {
            alu.setSexo('F');
        }
                    
        try {
            alu.setFechaIngreso(new MiCalendar(ingresojDateChooser.getCalendar().get(Calendar.DAY_OF_MONTH),ingresojDateChooser.getCalendar().get(Calendar.MONTH)+1,ingresojDateChooser.getCalendar().get(Calendar.YEAR)));
        } catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            alu.setCantMatAprob((Integer)cantMatAprobjSpinner.getValue());
        } catch (PersonaInvalidaException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }                        
        try {
            alu.setPromedio(Double.valueOf(promediojTextField.getText()));
        } catch (PersonaInvalidaException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        //SLD-EDF-ING-ARQ-ABG-CMS
        switch(carrerajComboBox.getSelectedIndex()){
            case 0:
                carreraElegida = "SLD";
                break;
            case 1:
                carreraElegida = "EDF";
                break;
            case 2:
                carreraElegida = "ING";
                break;
            case 3:
                carreraElegida = "ARQ";
                break;
            case 4:
                carreraElegida = "ABG";
                break;
            case 5:
                carreraElegida = "CMS";
                break;
        }
        try {
            alu.setCarrera(carreraElegida);
        } catch (PersonaInvalidaException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(estadojComboBox.getSelectedIndex()==0) {
            alu.setEstado('A');
        }
        else{
            alu.setEstado('B');
        }
            
        return alu;
    }
    
    private void buscarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarjButtonActionPerformed
        if(dnijTextField.getText().equals("")){
            JOptionPane.showMessageDialog(this,"Para buscar completar el campo","Forro",JOptionPane.PLAIN_MESSAGE);
            return;
        }
            
        alu = new Alumno(Integer.valueOf(dnijTextField.getText()));
        System.out.println(alu.getDni());
        try {            
            if(!(dao.existe(alu.getDni()))){               
                JOptionPane.showMessageDialog(this, "El alumno no existe.", "Error", JOptionPane.PLAIN_MESSAGE);
                return;
            }
        } catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            alu = (Alumno)dao.leer(alu.getDni());
        } catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }        
        JOptionPane.showMessageDialog(this, "Alumno encontrado.","Encontrado",JOptionPane.PLAIN_MESSAGE);
        
        dnijTextField.setText(String.valueOf(alu.getDni()));
        apynjTextField.setText(alu.getApyn());
        Date nac = alu.getFechaNac().getTime();
        nacjDateChooser.setDate(nac);
        if(alu.getSexo()=='M')
            mascjRadioButton.setSelected(true);
        else
            femjRadioButton.setSelected(true);
        Date ing = alu.getFechaIngreso().getTime();
        ingresojDateChooser.setDate(ing);
        cantMatAprobjSpinner.setValue(alu.getCantMatAprob());
        promediojTextField.setText(String.valueOf(alu.getPromedio()));
        switch(alu.getCarrera()){
            case "SLD":
                carrerajComboBox.setSelectedIndex(0);
                break;
            case "EDF":
                carrerajComboBox.setSelectedIndex(1);
                break;
            case "ING":
                carrerajComboBox.setSelectedIndex(2);
                break;
            case "ARQ":
                carrerajComboBox.setSelectedIndex(3);
                break;
            case "ABG":
                carrerajComboBox.setSelectedIndex(4);
                break;
            case "CMS":
                carrerajComboBox.setSelectedIndex(5);
                break;                            
        }
        if(alu.getEstado()=='A')
            estadojComboBox.setSelectedIndex(0);
        else
            estadojComboBox.setSelectedIndex(1);
        
        darDeBajajButton.setEnabled(true);        
        setBotonesTextField(true);
        estadojComboBox.setEnabled(true);
        cambiosGuardados = true;
        
    }//GEN-LAST:event_buscarjButtonActionPerformed

    private void darDeBajajButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_darDeBajajButtonActionPerformed
        int opt = JOptionPane.showConfirmDialog(this,"¿Seguro que desea dar de baja?","Dar de baja",JOptionPane.YES_NO_OPTION);
        if(opt == JOptionPane.NO_OPTION)
            return;        
        alu = new Alumno(Integer.valueOf(dnijTextField.getText()));
        try {
            alu = (Alumno)dao.leer(alu.getDni());
        } catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            dao.darDeBaja(alu);
        } catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        estadojComboBox.setSelectedIndex(1);
        JOptionPane.showMessageDialog(this, "Alumno dado de baja.","Baja",JOptionPane.PLAIN_MESSAGE);
        try {
            modeloTabla.setAlumnos(dao.listarTodos());
        } catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_darDeBajajButtonActionPerformed
       
    private void guardarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarjButtonActionPerformed
        if(ingresojDateChooser.getDate()==null || (Integer)cantMatAprobjSpinner.getValue()<0 || promediojTextField.getText().equals("") || dnijTextField.getText().equals("") || apynjTextField.getText().equals("") || nacjDateChooser.getDate()==null){
            
            JOptionPane.showMessageDialog(this, "Hay campos que estan incompletos.", "Error", JOptionPane.PLAIN_MESSAGE);
            return;
        }
        alu = new Alumno();        
        try {        
            alu = llenarAlumno(alu);
        } catch (PersonaInvalidaException ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(alu.getEstado()=='A')
            estadojComboBox.setSelectedIndex(0);
        else
            estadojComboBox.setSelectedIndex(1);
        
        try {
            if(dao.existe(Integer.valueOf(dnijTextField.getText()))){
                
                int opt = JOptionPane.showConfirmDialog(this,"El alumno ya existe.\n¿Desea actualizarlo?","Duplicado",JOptionPane.YES_NO_OPTION);
                
                if(opt==JOptionPane.YES_OPTION){
                    dao.actualizar(alu);
                }
                else
                    return;
            }
            else{
                dao.insertar(alu);
            }                
        } catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        cambiosGuardados = true;
        try {
            modeloTabla.setAlumnos(dao.listarTodos());
        } catch (Exception ex) {
            Logger.getLogger(Ventana.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_guardarjButtonActionPerformed

    private void dnijTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dnijTextFieldKeyTyped
        soloNumeroEntero(evt);
        cambiosGuardados = false;
        if(dnijTextField.getText().equals(""))
            cambiosGuardados = true;
    }//GEN-LAST:event_dnijTextFieldKeyTyped

    private void apynjTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apynjTextFieldKeyTyped
        soloLetra(evt);
        cambiosGuardados = false;
        if(apynjTextField.getText().equals(""))
            cambiosGuardados = true;
    }//GEN-LAST:event_apynjTextFieldKeyTyped

    private void promediojTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_promediojTextFieldKeyTyped
        soloNumero(evt);
        cambiosGuardados = false;
        if(promediojTextField.getText().equals(""))
            cambiosGuardados = true;
    }//GEN-LAST:event_promediojTextFieldKeyTyped

    private void cancelarjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarjButtonActionPerformed
        setBotonesTextField(true);        
        limpiarBotonesTextField();
        darDeBajajButton.setEnabled(false);
        cambiosGuardados = true;        
    }//GEN-LAST:event_cancelarjButtonActionPerformed
    
    private void setBotonesTextField(boolean on){        
        
        dnijTextField.setEnabled(on);
        apynjTextField.setEnabled(on);
        nacjDateChooser.setEnabled(on);
        mascjRadioButton.setEnabled(on);
        femjRadioButton.setEnabled(on);
        ingresojDateChooser.setEnabled(on);
        cantMatAprobjSpinner.setEnabled(on);
        promediojTextField.setEnabled(on);
        carrerajComboBox.setEnabled(on);
        estadojComboBox.setEnabled(false); 
        nuevojButton.setEnabled(on);
        buscarjButton.setEnabled(on);
        darDeBajajButton.setEnabled(on);
        guardarjButton.setEnabled(on);
        cancelarjButton.setEnabled(on);            
    }
    
    public void soloNumeroEntero (java.awt.event.KeyEvent evt){
        
        if(!(Character.isDigit(evt.getKeyChar())) || dnijTextField.getText().length() >= 8) {
            getToolkit().beep();
            evt.consume();
        }
   }
    
   public void soloNumero (java.awt.event.KeyEvent evt) {
        int k = (int) evt.getKeyChar();
        if(Character.isDigit(k)||k == 46){
            if( k == 46 ){                            
                String dato = promediojTextField.getText();
                int tam = dato.length();
                for (int i = 0; i < tam; i++) {
                    if(dato.contains("."))               
                        evt.setKeyChar((char)KeyEvent.VK_CLEAR);
                }
            }            
        }
        else{            
            evt.consume();
        }                       
   }
    
    public void soloLetra (java.awt.event.KeyEvent evt){        
        
        if(Character.isDigit(evt.getKeyChar())||apynjTextField.getText().length()==30) {         
            getToolkit().beep();
            evt.consume();
        }
    } 
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ventana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ventana().setVisible(true);                
            }
        });
    }
    
    private boolean cambiosGuardados = true;
    private Alumno alu;
    private DAO <Alumno,Integer> dao;
    private MiModel modeloTabla;
    private char sexoElegido = 'M';
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField apynjTextField;
    private javax.swing.JButton buscarjButton;
    public static javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton cancelarjButton;
    private javax.swing.JSpinner cantMatAprobjSpinner;
    private javax.swing.JComboBox<String> carrerajComboBox;
    private javax.swing.JButton darDeBajajButton;
    private javax.swing.JTextField dnijTextField;
    private javax.swing.JComboBox<String> estadojComboBox;
    private javax.swing.JRadioButton femjRadioButton;
    private javax.swing.JButton guardarjButton;
    private com.toedter.calendar.JDateChooser ingresojDateChooser;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton mascjRadioButton;
    private com.toedter.calendar.JDateChooser nacjDateChooser;
    private javax.swing.JButton nuevojButton;
    private javax.swing.JTextField promediojTextField;
    private javax.swing.JButton selectionjButton;
    private javax.swing.JTextField selectionjTextField;
    private javax.swing.JTable tablajTable;
    // End of variables declaration//GEN-END:variables
}
