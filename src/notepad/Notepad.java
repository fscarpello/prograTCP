/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package notepad;

import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;





/**
 *
 * @author Franco Scarpello
 */
public class Notepad extends javax.swing.JFrame {

    /**
     * Creates new form Notepad
     */
    public Notepad() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        NotepadjMenuBar = new javax.swing.JMenuBar();
        ArchivojMenu = new javax.swing.JMenu();
        NuevoArchivojMenuItem = new javax.swing.JMenuItem();
        AbrirArchivojMenuItem = new javax.swing.JMenuItem();
        GuardarArchivojMenuItem = new javax.swing.JMenuItem();
        GuardarComojMenuItem = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        SalirjMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jTextArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextAreaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea);

        NotepadjMenuBar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        ArchivojMenu.setText("Archivo");

        NuevoArchivojMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        NuevoArchivojMenuItem.setText("Nuevo");
        NuevoArchivojMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NuevoArchivojMenuItemActionPerformed(evt);
            }
        });
        ArchivojMenu.add(NuevoArchivojMenuItem);

        AbrirArchivojMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        AbrirArchivojMenuItem.setText("Abrir");
        AbrirArchivojMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirArchivojMenuItemActionPerformed(evt);
            }
        });
        ArchivojMenu.add(AbrirArchivojMenuItem);

        GuardarArchivojMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        GuardarArchivojMenuItem.setText("Guardar");
        GuardarArchivojMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarArchivojMenuItemActionPerformed(evt);
            }
        });
        ArchivojMenu.add(GuardarArchivojMenuItem);

        GuardarComojMenuItem.setText("Guardar como...");
        GuardarComojMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarComojMenuItemActionPerformed(evt);
            }
        });
        ArchivojMenu.add(GuardarComojMenuItem);
        ArchivojMenu.add(jSeparator1);

        SalirjMenuItem.setText("Salir");
        SalirjMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirjMenuItemActionPerformed(evt);
            }
        });
        ArchivojMenu.add(SalirjMenuItem);

        NotepadjMenuBar.add(ArchivojMenu);

        setJMenuBar(NotepadjMenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 523, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AbrirArchivojMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirArchivojMenuItemActionPerformed
        // TODO add your handling code here:
        if(cambioArchivo() == 1)
            return;
        JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showOpenDialog(this) != JFileChooser.APPROVE_OPTION){
            return;
        }
        else{
            archivoFile = fileChooser.getSelectedFile();
            FileReader lectorArchivo;
            try{
                lectorArchivo = new FileReader(archivoFile);
                jTextArea.read(lectorArchivo, null);
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Notepad.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(Notepad.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_AbrirArchivojMenuItemActionPerformed

    private void SalirjMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirjMenuItemActionPerformed
        // TODO add your handling code here:
        if(cambioArchivo() == 0)
            System.exit(0);
    }//GEN-LAST:event_SalirjMenuItemActionPerformed

    private void GuardarArchivojMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarArchivojMenuItemActionPerformed
        guardar();
    }//GEN-LAST:event_GuardarArchivojMenuItemActionPerformed

    private void guardar() throws HeadlessException {
        // TODO add your handling code here:
        FileWriter writer;
        if(isFileChange == true){
            if(archivoFile != null){
                try{
                    writer = new FileWriter(archivoFile);
                    jTextArea.write(writer);
                    isFileChange = false;
                } catch (IOException ex) {
                    Logger.getLogger(Notepad.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else{
                JFileChooser fileChooser = new JFileChooser();
                if(fileChooser.showSaveDialog(this) != JFileChooser.APPROVE_OPTION)
                    return;
                try{
                    archivoFile = fileChooser.getSelectedFile();
                    writer = new FileWriter(archivoFile);
                    jTextArea.write(writer);
                    isFileChange = false;
                } catch (IOException ex) {
                    Logger.getLogger(Notepad.class.getName()).log(Level.SEVERE, null, ex);
                }
            }            
        }
    }

    private void NuevoArchivojMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NuevoArchivojMenuItemActionPerformed
        if(cambioArchivo() != 1){
           isFileChange = false;
           archivoFile = null;
           jTextArea.setText("");           
        }
    }//GEN-LAST:event_NuevoArchivojMenuItemActionPerformed

    private void GuardarComojMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarComojMenuItemActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser();
        FileWriter writer;
        if(fileChooser.showSaveDialog(this) != JFileChooser.APPROVE_OPTION)
            return;

        archivoFile = fileChooser.getSelectedFile();
        try{
            writer = new FileWriter(archivoFile);
            jTextArea.write(writer);
            isFileChange = false;
        } catch (IOException ex) {
            Logger.getLogger(Notepad.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_GuardarComojMenuItemActionPerformed

    private void jTextAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaKeyPressed
        // TODO add your handling code here:
        isFileChange = true;
    }//GEN-LAST:event_jTextAreaKeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(cambioArchivo() == 0){
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private int cambioArchivo() throws HeadlessException {
        // TODO add your handling code here:
        if(isFileChange == true){
            int aux = JOptionPane.showConfirmDialog(this, "El contenido del archivo no ha sido guardado. Â¿Desea hacerlo?", "Advertencia", JOptionPane.YES_NO_CANCEL_OPTION);
            if (aux == JOptionPane.YES_OPTION) {
               guardar();
           } else {
               if (aux == JOptionPane.NO_OPTION) {
               } else {
                   if (aux == JOptionPane.CANCEL_OPTION) {
                       return 1;
                   }
               }
           }           
        }
        return 0;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notepad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notepad().setVisible(true);
            }
        });
    }

    private File archivoFile;
    private boolean isFileChange = false;

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem AbrirArchivojMenuItem;
    private javax.swing.JMenu ArchivojMenu;
    private javax.swing.JMenuItem GuardarArchivojMenuItem;
    private javax.swing.JMenuItem GuardarComojMenuItem;
    private javax.swing.JMenuBar NotepadjMenuBar;
    private javax.swing.JMenuItem NuevoArchivojMenuItem;
    private javax.swing.JMenuItem SalirjMenuItem;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTextArea jTextArea;
    // End of variables declaration//GEN-END:variables
}
