/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package abm.alumnos;

import dao.AlumnoDAOTxt;
import dao.AlumnoDAOJDBC;
import dao.DAO;
import static java.awt.Color.*;
import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;
import calendar.FechaInvalidaException;
import calendar.MiCalendar;
import java.sql.SQLException;
import java.util.List;
import persona.Alumno;

/**
 *
 * @author Franco Scarpello
 */
public class ABM extends javax.swing.JFrame {

    /**
     * Creates new form ABM
     */
    public ABM() {
        initComponents();
        
        modeloTabla = new MiModeloTabla();
        alumnosTable.setModel(modeloTabla);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        datosButtonGroup = new javax.swing.ButtonGroup();
        seleccionarArchivoTextField = new javax.swing.JTextField();
        seleccionarArchivoButton = new javax.swing.JButton();
        dniTextField = new javax.swing.JTextField();
        apynTextField = new javax.swing.JTextField();
        carreraComboBox = new javax.swing.JComboBox<String>();
        dniLabel = new javax.swing.JLabel();
        apynLabel = new javax.swing.JLabel();
        fecNacLabel = new javax.swing.JLabel();
        carreraLabel = new javax.swing.JLabel();
        nuevoButton = new javax.swing.JButton();
        abrirButton = new javax.swing.JButton();
        guardarButton = new javax.swing.JButton();
        borrarButton = new javax.swing.JButton();
        cancelarButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        alumnosTable = new javax.swing.JTable();
        sexoComboBox = new javax.swing.JComboBox<String>();
        promedioTextField = new javax.swing.JTextField();
        cantMatAprobTextField = new javax.swing.JTextField();
        sexoLabel = new javax.swing.JLabel();
        promedioLabel = new javax.swing.JLabel();
        cantMatAprobjLabel = new javax.swing.JLabel();
        fechaIngresoLabel = new javax.swing.JLabel();
        fechaNacDateChooser = new com.toedter.calendar.JDateChooser();
        fechaIngDateChooser = new com.toedter.calendar.JDateChooser();
        estadoMensajeLabel = new javax.swing.JLabel();
        apynMensajeLabel = new javax.swing.JLabel();
        fecNacMensajeLabel = new javax.swing.JLabel();
        promedioMensajeLabel = new javax.swing.JLabel();
        cantMatAprobMensajeLabel = new javax.swing.JLabel();
        fecIngMensajeLabel = new javax.swing.JLabel();
        dniMensajeLabel = new javax.swing.JLabel();
        estadoComboBox = new javax.swing.JComboBox<String>();
        estadoLabel = new javax.swing.JLabel();
        archivoTextoRadioButton = new javax.swing.JRadioButton();
        baseDatosRadioButton = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Gesti√≥n de Alumnos");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.darkGray);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        seleccionarArchivoTextField.setEditable(false);
        seleccionarArchivoTextField.setEnabled(false);

        seleccionarArchivoButton.setText("...");
        seleccionarArchivoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seleccionarArchivoButtonActionPerformed(evt);
            }
        });

        dniTextField.setColumns(8);
        dniTextField.setEnabled(false);
        dniTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                dniTextFieldFocusLost(evt);
            }
        });
        dniTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                dniTextFieldKeyTyped(evt);
            }
        });

        apynTextField.setEnabled(false);
        apynTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                apynTextFieldFocusLost(evt);
            }
        });
        apynTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                apynTextFieldKeyTyped(evt);
            }
        });

        carreraComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "INF", "ELE", "ABO", "MED" }));
        carreraComboBox.setEnabled(false);

        dniLabel.setText("DNI");

        apynLabel.setText("Apellido y Nombres");

        fecNacLabel.setText("Fecha de Nacimiento");

        carreraLabel.setText("Carrera");

        nuevoButton.setText("Nuevo");
        nuevoButton.setEnabled(false);
        nuevoButton.setMaximumSize(new java.awt.Dimension(71, 23));
        nuevoButton.setMinimumSize(new java.awt.Dimension(71, 23));
        nuevoButton.setPreferredSize(new java.awt.Dimension(71, 23));
        nuevoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nuevoButtonActionPerformed(evt);
            }
        });

        abrirButton.setText("Abrir");
        abrirButton.setEnabled(false);
        abrirButton.setMaximumSize(new java.awt.Dimension(71, 23));
        abrirButton.setMinimumSize(new java.awt.Dimension(71, 23));
        abrirButton.setPreferredSize(new java.awt.Dimension(71, 23));
        abrirButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirButtonActionPerformed(evt);
            }
        });

        guardarButton.setText("Guardar");
        guardarButton.setEnabled(false);
        guardarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarButtonActionPerformed(evt);
            }
        });

        borrarButton.setText("Borrar");
        borrarButton.setEnabled(false);
        borrarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrarButtonActionPerformed(evt);
            }
        });

        cancelarButton.setText("Cancelar");
        cancelarButton.setEnabled(false);
        cancelarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarButtonActionPerformed(evt);
            }
        });

        alumnosTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(alumnosTable);

        sexoComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "M", "F" }));
        sexoComboBox.setEnabled(false);

        promedioTextField.setEnabled(false);
        promedioTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                promedioTextFieldFocusLost(evt);
            }
        });
        promedioTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                promedioTextFieldKeyTyped(evt);
            }
        });

        cantMatAprobTextField.setEnabled(false);
        cantMatAprobTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cantMatAprobTextFieldFocusLost(evt);
            }
        });
        cantMatAprobTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cantMatAprobTextFieldKeyTyped(evt);
            }
        });

        sexoLabel.setText("Sexo");

        promedioLabel.setText("Promedio");

        cantMatAprobjLabel.setText("Cant. Mat. Aprobadas");

        fechaIngresoLabel.setText("Fecha de Ingreso");

        fechaNacDateChooser.setEnabled(false);

        fechaIngDateChooser.setEnabled(false);

        apynMensajeLabel.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        apynMensajeLabel.setForeground(new java.awt.Color(255, 0, 0));

        fecNacMensajeLabel.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        fecNacMensajeLabel.setForeground(new java.awt.Color(255, 0, 0));

        promedioMensajeLabel.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        promedioMensajeLabel.setForeground(new java.awt.Color(255, 0, 0));

        cantMatAprobMensajeLabel.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        cantMatAprobMensajeLabel.setForeground(new java.awt.Color(255, 0, 0));

        fecIngMensajeLabel.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        fecIngMensajeLabel.setForeground(new java.awt.Color(255, 0, 0));
        fecIngMensajeLabel.setToolTipText("");

        dniMensajeLabel.setFont(new java.awt.Font("Tahoma", 0, 9)); // NOI18N
        dniMensajeLabel.setForeground(new java.awt.Color(255, 0, 0));

        estadoComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "A", "B" }));
        estadoComboBox.setEnabled(false);

        estadoLabel.setText("Estado");

        datosButtonGroup.add(archivoTextoRadioButton);
        archivoTextoRadioButton.setSelected(true);
        archivoTextoRadioButton.setText("Archivo de Texto");
        archivoTextoRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                archivoTextoRadioButtonMouseClicked(evt);
            }
        });

        datosButtonGroup.add(baseDatosRadioButton);
        baseDatosRadioButton.setText("Base de Datos");
        baseDatosRadioButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                baseDatosRadioButtonMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 717, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(seleccionarArchivoTextField)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(seleccionarArchivoButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(sexoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(sexoLabel)
                                            .addComponent(dniMensajeLabel))
                                        .addGap(73, 73, 73)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(apynMensajeLabel)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                        .addComponent(promedioLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(promedioTextField))
                                                    .addComponent(promedioMensajeLabel))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(cantMatAprobjLabel)
                                                    .addComponent(cantMatAprobTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(cantMatAprobMensajeLabel)))))
                                    .addComponent(estadoMensajeLabel))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(fecIngMensajeLabel)
                                            .addComponent(fechaIngDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(fechaIngresoLabel))
                                        .addGap(35, 35, 35)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(estadoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(estadoLabel))
                                        .addGap(91, 91, 91))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(fecNacMensajeLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dniTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dniLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(apynTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(apynLabel))
                                .addGap(51, 51, 51)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(fechaNacDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(fecNacLabel))
                                .addGap(35, 35, 35)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(carreraComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(carreraLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(borrarButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(guardarButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(nuevoButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(abrirButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                            .addComponent(cancelarButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(baseDatosRadioButton)
                            .addComponent(archivoTextoRadioButton))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(seleccionarArchivoTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(seleccionarArchivoButton))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(archivoTextoRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(baseDatosRadioButton)
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dniLabel)
                            .addComponent(apynLabel)
                            .addComponent(fecNacLabel)
                            .addComponent(carreraLabel))
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fechaNacDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(dniTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(apynTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(carreraComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 1, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dniMensajeLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(apynMensajeLabel, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(fecNacMensajeLabel)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(abrirButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nuevoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(guardarButton)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(sexoLabel)
                        .addComponent(promedioLabel))
                    .addComponent(fechaIngresoLabel)
                    .addComponent(cantMatAprobjLabel)
                    .addComponent(estadoLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(borrarButton, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelarButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(fechaIngDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(sexoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(promedioTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cantMatAprobTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(estadoComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(promedioMensajeLabel)
                                    .addComponent(cantMatAprobMensajeLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(estadoMensajeLabel))
                            .addComponent(fecIngMensajeLabel))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 294, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void limpiarCampos() {
        dniTextField.setText("");
        apynTextField.setText("");
        promedioTextField.setText("");
        cantMatAprobTextField.setText("");
        fechaNacDateChooser.setCalendar(null);
        fechaIngDateChooser.setCalendar(null);
        sexoComboBox.setSelectedItem("M");
        carreraComboBox.setSelectedItem("INF");
        estadoComboBox.setSelectedItem("A");
        
        apynMensajeLabel.setText("");
        apynTextField.setBorder(new LineBorder(GRAY));
        
        dniMensajeLabel.setText("");
        dniTextField.setBorder(new LineBorder(GRAY));
        
        promedioMensajeLabel.setText("");            
        promedioTextField.setBorder(new LineBorder(GRAY));
        
        cantMatAprobMensajeLabel.setText("");
        cantMatAprobTextField.setBorder(new LineBorder(GRAY));

        estadoMensajeLabel.setText("");
    }
    
    private void activarCamposYBotones() {
        dniTextField.setEnabled(true);
        apynTextField.setEnabled(true);
        sexoComboBox.setEnabled(true);
        carreraComboBox.setEnabled(true);
        estadoComboBox.setEnabled(true);
        fechaNacDateChooser.setEnabled(true);
        fechaIngDateChooser.setEnabled(true);
        promedioTextField.setEnabled(true);
        cantMatAprobTextField.setEnabled(true);
        nuevoButton.setEnabled(true);
        guardarButton.setEnabled(true);
        abrirButton.setEnabled(true);
        cancelarButton.setEnabled(true);
        alumnosTable.setEnabled(true);
        
        if(archivoTextoRadioButton.isSelected()){
            borrarButton.setEnabled(false);
            seleccionarArchivoButton.setEnabled(true);
        }
        else if(baseDatosRadioButton.isSelected()){
            borrarButton.setEnabled(true);
            seleccionarArchivoButton.setEnabled(false);
        }
    }
     
    private void desactivarCamposYBotones() {
        dniTextField.setEnabled(false);
        apynTextField.setEnabled(false);
        sexoComboBox.setEnabled(false);
        carreraComboBox.setEnabled(false);
        estadoComboBox.setEnabled(false);
        fechaNacDateChooser.setEnabled(false);
        fechaIngDateChooser.setEnabled(false);
        promedioTextField.setEnabled(false);
        cantMatAprobTextField.setEnabled(false);
        nuevoButton.setEnabled(false);
        guardarButton.setEnabled(false);
        abrirButton.setEnabled(false);
        cancelarButton.setEnabled(false);
        borrarButton.setEnabled(false);
        alumnosTable.setEnabled(false);
        seleccionarArchivoButton.setEnabled(true);
    }
    
    private void seleccionarArchivoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seleccionarArchivoButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        try{
            
            int ret = fileChooser.showOpenDialog(this);
            if (ret != JFileChooser.APPROVE_OPTION) {
                return;
            }
            dao = new AlumnoDAOTxt(fileChooser.getSelectedFile());
            seleccionarArchivoTextField.setText(fileChooser.getSelectedFile().getAbsolutePath());   
            archivoFile = fileChooser.getSelectedFile();
            modeloTabla.setAlumnos(dao.getTodos());
            limpiarCampos();
            activarCamposYBotones();
        }catch (FileNotFoundException ex) {
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);            
        } catch (Exception ex) {
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_seleccionarArchivoButtonActionPerformed


    
    private void abrirButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirButtonActionPerformed
        try {
            alumno = new Alumno();
            alumno.setDni(Integer.valueOf(dniTextField.getText()));

            alumno = dao.buscar(alumno.getDni());

             if(dao.buscar(alumno.getDni()) == null)
             {
                 JOptionPane.showMessageDialog(this, "No se encontro el Alumno con DNI " + String.valueOf(alumno.getDni()), "Error", JOptionPane.ERROR_MESSAGE);
                 return;
             }
            obtenerValores();
            estadoMensajeLabel.setForeground(GREEN);
            estadoMensajeLabel.setText("Alumno encontrado");
        } catch (Exception ex) {
        JOptionPane.showMessageDialog(this, "Alumno con DNI " + alumno.getDni() + " no encontrado.\n", "Error", JOptionPane.ERROR_MESSAGE);
        estadoMensajeLabel.setForeground(RED);
        estadoMensajeLabel.setText("Alumno no encontrado");
        } 
    }//GEN-LAST:event_abrirButtonActionPerformed

        private void obtenerValores() throws Exception {
            dniTextField.setText(String.valueOf(alumno.getDni()));
            apynTextField.setText(alumno.getApyn().trim());
            sexoComboBox.setSelectedItem(String.valueOf(alumno.getSexo()));
            promedioTextField.setText(String.valueOf(alumno.getPromedio()).replace('.', ','));
            cantMatAprobTextField.setText(String.valueOf(alumno.getCantMatAprob()));
            fechaNacDateChooser.setCalendar(alumno.getFechaNac());
            fechaIngDateChooser.setCalendar(alumno.getFechaIngr());
            carreraComboBox.setSelectedItem(alumno.getCarrera());
    }

    
    private void datosAlumno() throws Exception, FechaInvalidaException, NumberFormatException {
        alumno.setDni(Integer.valueOf(dniTextField.getText()));
        alumno.setApyn(apynTextField.getText());
        String aux = sexoComboBox.getSelectedItem().toString();
        alumno.setSexo((char)aux.charAt(0));
        alumno.setPromedio(Double.valueOf(promedioTextField.getText().replace(',', '.')));
        alumno.setCantMatAprob(Integer.valueOf(cantMatAprobTextField.getText()));
        alumno.setFechaNac(new MiCalendar(Integer.valueOf(fechaNacDateChooser.getCalendar().get(Calendar.DAY_OF_MONTH)),
                                          Integer.valueOf(fechaNacDateChooser.getCalendar().get(Calendar.MONTH)+1),
                                          Integer.valueOf(fechaNacDateChooser.getCalendar().get(Calendar.YEAR))));
        
        alumno.setFechaIngr(new MiCalendar(Integer.valueOf(fechaIngDateChooser.getCalendar().get(Calendar.DAY_OF_MONTH)),
                                           Integer.valueOf(fechaIngDateChooser.getCalendar().get(Calendar.MONTH)+1),
                                           Integer.valueOf(fechaIngDateChooser.getCalendar().get(Calendar.YEAR))));
        alumno.setCarrera(carreraComboBox.getSelectedItem().toString());
    }

    private void nuevoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nuevoButtonActionPerformed
        try
        {
            if(dao.buscar(Integer.valueOf(dniTextField.getText()))!= null) {
                JOptionPane.showMessageDialog(this, "El DNI " + dniTextField.getText() + " ya existe.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            else {
                if(!dniTextField.getText().isEmpty() && !apynTextField.getText().isEmpty()
                                                     && !promedioTextField.getText().isEmpty()
                                                     && !cantMatAprobTextField.getText().isEmpty()
                                                     && !fechaNacDateChooser.getDate().toString().isEmpty()
                                                     && !fechaIngDateChooser.getDate().toString().isEmpty()){
                    alumno = new Alumno();
                    datosAlumno();
                    dao.insertar(alumno);
                    modeloTabla.setAlumnos(new ArrayList<Alumno>());
                    modeloTabla.setAlumnos(dao.getTodos());
                    estadoMensajeLabel.setForeground(GREEN);
                    estadoMensajeLabel.setText("Alumno insertado.");
                    limpiarCampos();
                }else{
                    estadoMensajeLabel.setForeground(RED);
                    estadoMensajeLabel.setText("Complete todos los campos.");
                }
            }
        }        
        catch(NumberFormatException ex2){
            estadoMensajeLabel.setForeground(RED);
            estadoMensajeLabel.setText("Alumno NO insertado.");
            JOptionPane.showMessageDialog(this, "Alumno con DNI " + alumno.getDni() + " no insertado.\nRevis√° los datos ingresados.", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex2);
        }
        catch(FechaInvalidaException ex3){
            estadoMensajeLabel.setForeground(RED);
            estadoMensajeLabel.setText("Alumno NO insertado.");
            JOptionPane.showMessageDialog(this, "Alumnocon DNI " + alumno.getDni() + " no insertado.\nRevis√° los datos ingresados.", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex3);
        } catch (Exception ex) {
            estadoMensajeLabel.setForeground(RED);
            estadoMensajeLabel.setText("Alumno NO insertado.");
            JOptionPane.showMessageDialog(this, "Alumno con DNI" + alumno.getDni() + " no insertado.\nRevis√° los datos ingresados.", "Error", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_nuevoButtonActionPerformed

    private void borrarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrarButtonActionPerformed
        try {
            alumno = new Alumno();
            datosAlumno();
            dao.eliminar(alumno);
            modeloTabla.setAlumnos(new ArrayList<Alumno>());
            modeloTabla.setAlumnos(dao.getTodos());
        } catch (FechaInvalidaException ex) {
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Alumno con DNI" + alumno.getDni() + " no encontrado.\n", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_borrarButtonActionPerformed

    private void cancelarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarButtonActionPerformed
        limpiarCampos();
    }//GEN-LAST:event_cancelarButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void guardarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarButtonActionPerformed
        try {
            alumno = new Alumno();
            datosAlumno();
            if(estadoComboBox.getSelectedItem().equals("A"))
                dao.actualizar(alumno);
                
            if(estadoComboBox.getSelectedItem().equals("B"))
                dao.darDeBaja(alumno);
            
            modeloTabla.setAlumnos(new ArrayList<Alumno>());
            modeloTabla.setAlumnos(dao.getTodos());
            
            estadoMensajeLabel.setForeground(GREEN);
            estadoMensajeLabel.setText("Alumno actualizado.");
        } catch (Exception ex) {
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Alumno con DNI " + alumno.getDni() + " no encontrado.\n", "Error", JOptionPane.ERROR_MESSAGE);
            estadoMensajeLabel.setForeground(RED);
            estadoMensajeLabel.setText("Alumno NO actualizado.");
        }
    }//GEN-LAST:event_guardarButtonActionPerformed

    private void dniTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_dniTextFieldFocusLost
        if(dniTextField.getText().isEmpty()){
            dniMensajeLabel.setText("Ingrese DNI.");
            dniTextField.setBorder(new LineBorder(RED));
        } else{
            dniMensajeLabel.setText("");
            dniTextField.setBorder(new LineBorder(GRAY));
        }
    }//GEN-LAST:event_dniTextFieldFocusLost

    private void dniTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dniTextFieldKeyTyped
        if (dniTextField.getText().length() >= 8 || Character.isDigit(evt.getKeyChar()) != true)
            evt.consume();
    }//GEN-LAST:event_dniTextFieldKeyTyped

    private void apynTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_apynTextFieldKeyTyped
        if (apynTextField.getText().length() >= 30 || Character.isDigit(evt.getKeyChar()))
            evt.consume();
    }//GEN-LAST:event_apynTextFieldKeyTyped

    private void promedioTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_promedioTextFieldKeyTyped
        if (promedioTextField.getText().length() >= 5 || Character.isLetter(evt.getKeyChar()) == true)
            evt.consume();
    }//GEN-LAST:event_promedioTextFieldKeyTyped

    private void cantMatAprobTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cantMatAprobTextFieldKeyTyped
        if (cantMatAprobTextField.getText().length() >= 2 || Character.isDigit(evt.getKeyChar()) != true)
            evt.consume();
    }//GEN-LAST:event_cantMatAprobTextFieldKeyTyped

    private void apynTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_apynTextFieldFocusLost
        if(apynTextField.getText().isEmpty()){
            apynMensajeLabel.setText("Ingrese Apellido y Nombre.");
            apynTextField.setBorder(new LineBorder(RED));
        }else {
            apynMensajeLabel.setText("");
            apynTextField.setBorder(new LineBorder(GRAY));        
        }

    }//GEN-LAST:event_apynTextFieldFocusLost

    private void promedioTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_promedioTextFieldFocusLost
        if(promedioTextField.getText().isEmpty()){
            promedioMensajeLabel.setText("Ingrese Promedio");  
            promedioTextField.setBorder(new LineBorder(RED));
        }else{
            promedioMensajeLabel.setText("");            
            promedioTextField.setBorder(new LineBorder(GRAY));
        }
    }//GEN-LAST:event_promedioTextFieldFocusLost

    private void cantMatAprobTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cantMatAprobTextFieldFocusLost
        if(cantMatAprobTextField.getText().isEmpty()){
            cantMatAprobMensajeLabel.setText("Complete este campo.");  
            cantMatAprobTextField.setBorder(new LineBorder(RED));
        }else{
            cantMatAprobMensajeLabel.setText("");
            cantMatAprobTextField.setBorder(new LineBorder(GRAY));
        }
    }//GEN-LAST:event_cantMatAprobTextFieldFocusLost

    private void archivoTextoRadioButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_archivoTextoRadioButtonMouseClicked
        modeloTabla.setAlumnos(new ArrayList<Alumno>());
        if(archivoFile == null){
            desactivarCamposYBotones();    
        }else{
            try {
                dao = new AlumnoDAOTxt(archivoFile);
                seleccionarArchivoTextField.setText(archivoFile.getAbsolutePath());   
                modeloTabla.setAlumnos(dao.getTodos());
                limpiarCampos();
                activarCamposYBotones();
            } catch (FileNotFoundException ex) {
                Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
            } catch (Exception ex) {
                Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_archivoTextoRadioButtonMouseClicked

    private void baseDatosRadioButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_baseDatosRadioButtonMouseClicked
        seleccionarArchivoButton.setEnabled(false);
        modeloTabla.setAlumnos(new ArrayList<Alumno>());
        try {    
            dao = new AlumnoDAOJDBC();
            modeloTabla.setAlumnos(dao.getTodos());
            activarCamposYBotones();
        } catch (SQLException ex) {
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(ABM.class.getName()).log(Level.SEVERE, null, ex);
        }        
    }//GEN-LAST:event_baseDatosRadioButtonMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ABM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ABM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ABM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ABM.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ABM().setVisible(true);
            }
        });
    }
    
    private Alumno alumno;
    private DAO<Alumno, Integer> dao;
    private MiModeloTabla modeloTabla;
    private File archivoFile = null;
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abrirButton;
    private javax.swing.JTable alumnosTable;
    private javax.swing.JLabel apynLabel;
    private javax.swing.JLabel apynMensajeLabel;
    private javax.swing.JTextField apynTextField;
    private javax.swing.JRadioButton archivoTextoRadioButton;
    private javax.swing.JRadioButton baseDatosRadioButton;
    private javax.swing.JButton borrarButton;
    private javax.swing.JButton cancelarButton;
    private javax.swing.JLabel cantMatAprobMensajeLabel;
    private javax.swing.JTextField cantMatAprobTextField;
    private javax.swing.JLabel cantMatAprobjLabel;
    private javax.swing.JComboBox<String> carreraComboBox;
    private javax.swing.JLabel carreraLabel;
    private javax.swing.ButtonGroup datosButtonGroup;
    private javax.swing.JLabel dniLabel;
    private javax.swing.JLabel dniMensajeLabel;
    private javax.swing.JTextField dniTextField;
    private javax.swing.JComboBox<String> estadoComboBox;
    private javax.swing.JLabel estadoLabel;
    private javax.swing.JLabel estadoMensajeLabel;
    private javax.swing.JLabel fecIngMensajeLabel;
    private javax.swing.JLabel fecNacLabel;
    private javax.swing.JLabel fecNacMensajeLabel;
    private com.toedter.calendar.JDateChooser fechaIngDateChooser;
    private javax.swing.JLabel fechaIngresoLabel;
    private com.toedter.calendar.JDateChooser fechaNacDateChooser;
    private javax.swing.JButton guardarButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton nuevoButton;
    private javax.swing.JLabel promedioLabel;
    private javax.swing.JLabel promedioMensajeLabel;
    private javax.swing.JTextField promedioTextField;
    private javax.swing.JButton seleccionarArchivoButton;
    private javax.swing.JTextField seleccionarArchivoTextField;
    private javax.swing.JComboBox<String> sexoComboBox;
    private javax.swing.JLabel sexoLabel;
    // End of variables declaration//GEN-END:variables



}
